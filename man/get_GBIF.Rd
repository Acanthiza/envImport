% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GBIF.r
\name{get_GBIF}
\alias{get_GBIF}
\title{Get occurrence records from GBIF}
\usage{
get_GBIF(
  taxon_key = 1,
  ...,
  poly = NULL,
  poly_buf = 1e+05,
  out_file = NULL,
  data_map = NULL
)
}
\arguments{
\item{taxon_key}{Numeric The primary id number used in GBIF to id a species
(or some higher group). These are the id numbers found in the GBIF backbone
taxonomy. See
\href{https://discourse.gbif.org/t/understanding-gbif-taxonomic-keys-usagekey-taxonkey-specieskey/3045}{understanding GBIF taxonomic keys}}

\item{...}{Other arguments passed to \code{rgbif::occ_download}}

\item{poly}{sf. Polygon defining area of interest for retrieving data.
Acutally turned into \code{sf::st_bbox(poly)} before any \code{poly_buf} and converting
to WKT using}

\item{poly_buf}{Numeric. Distance to buffer \code{poly} via \code{sf::st_buffer} \code{dist}
argument.}

\item{out_file}{Character. Full path to save output data.}

\item{data_map}{Dataframe. Mapping of GBIF fields to retrieve and their new
names}
}
\value{
if(!is.null(out_file)) dataframe, \code{rio::export(results, out_file)},
and \code{gbif_data_ref.bib} (in the same directory as \code{out_file}) else dataframe.
}
\description{
GBIF is the
\href{https://www.gbif.org/}{Global Biodiversity Information Facility}.
}
\details{
Uses various \verb{[rgbif](https://docs.ropensci.org/rgbif/index.html)} functions
to return a dataframe of occurence records. Requires
\href{https://docs.ropensci.org/rgbif/articles/gbif_credentials.html}{gbif credentials}.
If\code{out_file} is provided will save the dataframe there with the full results
in \code{fs::path(dirname(out_file), "GBIF")}. If a data_map is provided, only
fields specified in the data_map are returned. Otherwise all fields are
returned.
}
\examples{
\dontrun{
# Australian Bustard Ardeotis australis with year == 1901. Returns 7 records
# but can take a while to run depending on GBIF waiting times.
get_GBIF(taxon_key = 2474903, rgbif::pred("year", 1901))
}
}
