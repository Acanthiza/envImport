% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_gbif.r
\name{get_gbif}
\alias{get_gbif}
\title{Get an occurrence record set from GBIF}
\usage{
get_gbif(
  ...,
  aoi = NULL,
  save_dir = NULL,
  get_new = FALSE,
  request_wait = 20,
  name = "gbif",
  data_map = NULL,
  filter_inconsistent = TRUE,
  filter_NA_date = TRUE,
  occ_char = TRUE,
  adj_spa_rel = TRUE,
  previous_key = NULL
)
}
\arguments{
\item{...}{Other arguments passed to \code{rgbif::occ_download()}}

\item{aoi}{sf defining area of interest.}

\item{save_dir}{Character. File path into which to save outputs. If \code{null}
results will be saved to \code{fs::path("out", "ds", "gbif")} as file
\code{gbif_raw.rds}.}

\item{get_new}{Logical. If \code{FALSE} will attempt to load data from previously
saved results.}

\item{request_wait}{Integer. Time in seconds to wait between
\code{rgbif::occ_download_meta()} requests. Used by \code{rgbif::occ_download_wait()}
\code{status_ping} argument.}

\item{name}{Character. \code{data_name} value in \code{envImport::data_map}
(or other \code{data_map})}

\item{data_map}{Dataframe or NULL. Mapping of fields to retrieve. See example
\code{envImport::data_map}}

\item{filter_NA_date}{Logical. Filter if \code{is.na(eventDate)}.}

\item{occ_char}{Logical. If true, occ_derivation will be coerced to character
(to match other data sources).}

\item{adj_spa_rel}{Logical. If true, an attempt will be made to check
\code{coordinateUncertaintyInMeters} against: information in \code{informationWithheld.} If
\code{informationWithheld} contains "Coordinate uncertainty increased to",
\code{readr::parse_number()} is used to retrieve that number, which is then used
to replace any value in \code{coordinateUncertaintyInMeters}; and if the column
\code{issue} contains \code{COORDINATE_UNCERTAINTY_METERS_INVALID},
\code{coordinateUncertaintyInMeters} is limited to 10000 or greater.}

\item{previous_key}{Character. e.g. \code{0092123-240506114902167}. If provided,
an attempt will be made to load from previously \emph{successful} download of
occurrence data.}
}
\value{
Dataframe, \code{save_file}, \code{gbif_data_ref.bib} (in the same directory as
\code{save_file}) and full GBIF download.
}
\description{
Deprecated. Use \code{get_galah()} with \code{atlas = "GBIF"}.
}
\details{
Get new occurrence record set from GBIF and save as \code{.rds}. GBIF is the
\href{https://www.gbif.org/}{Global Biodiversity Information Facility}.

Uses various \href{https://docs.ropensci.org/rgbif/index.html}{\code{rgbif}} functions
to return a dataframe of occurence records. Requires
\href{https://docs.ropensci.org/rgbif/articles/gbif_credentials.html}{gbif credentials}.

Any arguments to \code{rgbif::occ_download()} can be passed via \code{...}. For
convenience, \code{aoi} can also be passed directly and internally it is converted
to a bounding box in appropriate lat/long and passed to
\code{rgbif::pred_within()} in WKT format.
}
\examples{
\dontrun{
# Australian Bustard Ardeotis australis with year == 1901. Returns 7 records
# but can take a while to run depending on GBIF waiting times.
get_gbif(aoi = NULL, save_dir = NULL, get_new = FALSE, rgbif::pred("taxonKey", 2474903), rgbif::pred("year", 1901))
}
}
